{
  "info": {
    "name": "Xapiand",
    "description": "Xapiand is A Modern Highly Available Distributed RESTful Search and Storage Engine built for the Cloud and with Data Locality in mind.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Check Types",
      "item": [
        {
          "name": "Index Types",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "types",
                "1"
              ],
              "query": [
                {
                  "key": "commit",
                  "value": null
                },
                {
                  "key": "echo",
                  "value": null
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"positive\": {\r\n        \"_type\": \"positive\",\r\n        \"_value\": 123456\r\n    },\r\n    \"integer\": {\r\n        \"_type\": \"integer\",\r\n        \"_value\": 123456\r\n    },\r\n    \"float\": {\r\n        \"_type\": \"float\",\r\n        \"_value\": 123456\r\n    },\r\n    \"boolean\": {\r\n        \"_type\": \"boolean\",\r\n        \"_value\": true\r\n    },\r\n    \"keyword\": {\r\n        \"_type\": \"keyword\",\r\n        \"_value\": \"true\"\r\n    },\r\n    \"text\": {\r\n        \"_type\": \"text\",\r\n        \"_value\": \"this field is text\"\r\n    },\r\n    \"date\": {\r\n        \"_type\": \"date\",\r\n        \"_value\": \"2019-05-17\"\r\n    },\r\n    \"datetime\": {\r\n        \"_type\": \"datetime\",\r\n        \"_value\": \"2019-05-17T10:12:12.123\"\r\n    },\r\n    \"time\": {\r\n        \"_type\": \"time\",\r\n        \"_value\": \"10:12:12.123\"\r\n    },\r\n    \"timedelta\": {\r\n        \"_type\": \"timedelta\",\r\n        \"_value\": \"+10:12:12.123\"\r\n    },\r\n    \"uuid\": {\r\n        \"_type\": \"uuid\",\r\n        \"_value\": \"22214800-78c7-11e9-b7d0-e5256ff63dab\"\r\n    }\r\n\r\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Check Float Type",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "types",
                "/"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"schema type is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    var accuracy_expected = [100,1000,10000,100000,1000000,100000000];",
                  "    pm.expect(jsonData._schema.schema['float']._type).to.equal('floating');",
                  "});",
                  "pm.test(\"accuracy is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    var accuracy_expected = [100,1000,10000,100000,1000000,100000000];",
                  "    for (var i = 0; i < 1000; ++i) {",
                  "        pm.expect(jsonData._schema.schema['float']._accuracy[i]).to.equal(accuracy_expected[i]);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Check Integer Type",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "types",
                "/"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"schema type is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._schema.schema['integer']._type).to.equal('integer');",
                  "});",
                  "pm.test(\"accuracy is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    var accuracy_expected = [100,1000,10000,100000,1000000,100000000];",
                  "    for (var i = 0; i < 1000; ++i) {",
                  "        pm.expect(jsonData._schema.schema['integer']._accuracy[i]).to.equal(accuracy_expected[i]);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Check Positive Type",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "types",
                "/"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"schema type is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._schema.schema['positive']._type).to.equal('positive');",
                  "});",
                  "pm.test(\"accuracy is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    var accuracy_expected = [100,1000,10000,100000,1000000,100000000];",
                  "    for (var i = 0; i < 1000; ++i) {",
                  "        pm.expect(jsonData._schema.schema['positive']._accuracy[i]).to.equal(accuracy_expected[i]);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Check Boolean Type",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "types",
                "/"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"schema type is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._schema.schema['boolean']._type).to.equal('boolean');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Check Keyword Type",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "types",
                "/"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"schema type is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._schema.schema['keyword']._type).to.equal('keyword');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Check Text Type",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "types",
                "/"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"schema type is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._schema.schema['text']._type).to.equal('text');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Check Date Type",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "types",
                "/"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"schema type is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._schema.schema['date']._type).to.equal('date');",
                  "});",
                  "pm.test(\"accuracy is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    var accuracy_expected = ['hour','day','month','year','decade','century'];",
                  "    for (var i = 0; i < 1000; ++i) {",
                  "        pm.expect(jsonData._schema.schema['date']._accuracy[i]).to.equal(accuracy_expected[i]);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Check Datetime Type",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "types",
                "/"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"schema type is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._schema.schema['datetime']._type).to.equal('datetime');",
                  "});",
                  "pm.test(\"accuracy is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    var accuracy_expected = ['hour','day','month','year','decade','century'];",
                  "    for (var i = 0; i < 1000; ++i) {",
                  "        pm.expect(jsonData._schema.schema['datetime']._accuracy[i]).to.equal(accuracy_expected[i]);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Check Time Type",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "types",
                "/"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"schema type is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._schema.schema['time']._type).to.equal('time');",
                  "});",
                  "pm.test(\"accuracy is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    var accuracy_expected = ['minute','hour'];",
                  "    for (var i = 0; i < 1000; ++i) {",
                  "        pm.expect(jsonData._schema.schema['time']._accuracy[i]).to.equal(accuracy_expected[i]);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Check Timedelta Type",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "types",
                "/"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"schema type is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._schema.schema['timedelta']._type).to.equal('timedelta');",
                  "});",
                  "pm.test(\"accuracy is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    var accuracy_expected = ['minute','hour'];",
                  "    for (var i = 0; i < 1000; ++i) {",
                  "        pm.expect(jsonData._schema.schema['timedelta']._accuracy[i]).to.equal(accuracy_expected[i]);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Check uuid Type",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "types",
                "/"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"schema type is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._schema.schema['uuid']._type).to.equal('uuid');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Global index",
      "item": [
        {
          "name": "Index global",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "doc"
              ],
              "query": [
                {
                  "key": "commit",
                  "value": null
                },
                {
                  "key": "echo",
                  "value": null
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\r\n\t\"_id\": {\r\n\t\t\"_type\": \"keyword\",\r\n\t},\r\n\t\"ident\": {\r\n\t\t\"_type\": \"uuid\",\r\n\t\t\"_index\": \"global_terms\",\r\n\t\t\"_value\": \"~notmet\"\r\n\t},\r\n}"
            }
          }
        },
        {
          "name": "Search for Global",
          "request": {
            "method": "SEARCH",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "/"
              ],
              "query": [
                {
                  "key": "q",
                  "value": "~notmet"
                },
                {
                  "key": "echo",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.hits[0].ident).to.equal('~notmet');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Null value",
      "item": [
        {
          "name": "Index Null",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "schemas",
                "implicit-_type",
                "doc"
              ],
              "query": [
                {
                  "key": "commit",
                  "value": null
                },
                {
                  "key": "echo",
                  "value": null
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"_id\": {\r\n        \"_type\": \"keyword\",\r\n    },\r\n    \"campo\": {\r\n        \"_type\": \"keyword\",\r\n        \"_value\": null\r\n    }\r\n}"
            }
          }
        },
        {
          "name": "Get Null",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "schemas",
                "implicit-_type",
                "doc"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.campo).to.equal(null);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Chai script",
      "item": [
        {
          "name": "Counter",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "script",
                "doc"
              ],
              "query": [
                {
                  "key": "commit",
                  "value": null
                },
                {
                  "key": "echo",
                  "value": null
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"_id\": {\r\n        \"_type\": \"keyword\"\r\n    },\r\n    \"cnt\": {\r\n        \"_type\": \"integer\",\r\n        \"_value\": 0\r\n    },\r\n    \"_script\": {\r\n        \"_type\": \"script\",\r\n        \"_value\": \"_doc[\\\"cnt\\\"] = _old_doc[\\\"cnt\\\"] + 1\"\r\n    }\r\n}"
            }
          }
        },
        {
          "name": "Get Counter",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "script",
                "doc"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.cnt).to.equal(1);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Increase Counter",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "script",
                "doc"
              ],
              "query": [
                {
                  "key": "commit",
                  "value": null
                },
                {
                  "key": "echo",
                  "value": null
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\r\n        \"_script\": {\r\n        \"_type\": \"script\",\r\n        \"_value\": \"_doc[\\\"cnt\\\"] = _old_doc[\\\"cnt\\\"] + 1\"\r\n    }\r\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.cnt).to.equal(2);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Using parameter",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "script-param",
                "doc"
              ],
              "query": [
                {
                  "key": "commit",
                  "value": null
                },
                {
                  "key": "echo",
                  "value": null
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"_id\": {\r\n        \"_type\": \"keyword\"\r\n    },\r\n    \"cnt\": {\r\n        \"_type\": \"integer\",\r\n        \"_value\": 0\r\n    },\r\n    \"_script\": {\r\n        \"_type\": \"script\",\r\n        \"_value\": \"_doc[\\\"cnt\\\"] = _old_doc[\\\"cnt\\\"] + increment\",\r\n        \"_params\": {\r\n            \"increment\": 2\r\n        }\r\n    }\r\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.cnt).to.equal(2);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Counter",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "script-param",
                "doc"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.cnt).to.equal(2);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Replace value for Null",
      "item": [
        {
          "name": "Index value",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "replace-null",
                "doc1"
              ],
              "query": [
                {
                  "key": "commit",
                  "value": null
                },
                {
                  "key": "echo",
                  "value": null
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"_id\": {\r\n        \"_type\": \"keyword\"\r\n    },\r\n    \"campo\": {\r\n        \"_type\": \"integer\",\r\n        \"_value\": 12\r\n    }\r\n}"
            }
          }
        },
        {
          "name": "Replace with null",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "replace-null",
                "doc2"
              ],
              "query": [
                {
                  "key": "commit",
                  "value": null
                },
                {
                  "key": "echo",
                  "value": null
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"_id\": {\r\n        \"_type\": \"keyword\"\r\n    },\r\n    \"campo\": null\r\n}"
            }
          }
        },
        {
          "name": "value is valid",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "replace-null",
                "doc2"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.campo).to.equal(null);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Ignore comment",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Accept",
            "value": "application/json",
            "type": "text"
          }
        ],
        "url": {
          "host": [
            "{{domain}}"
          ],
          "path": [
            "test",
            "comment-ignore",
            "/"
          ],
          "query": [
            {
              "key": "commit",
              "value": null
            },
            {
              "key": "echo",
              "value": null
            }
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"_recurse\": false,\r\n  \"_id\": {\r\n    \"_type\": \"uuid\",\r\n  },\r\n  \"#comment\": \"This comment is ignored\",\r\n  \"schema\": {\r\n    \"_type\": \"object\"\r\n  }\r\n}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"response is success\", function() {",
              "    pm.response.to.be.success;",
              "});",
              "pm.test(\"value is valid\", function() {",
              "    var jsonData = pm.response.json();",
              "    for (key in jsonData.schema) {",
              "       pm.expect(key).to.not.include('#comment');",
              "    }",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Create Schema",
      "item": [
        {
          "name": "Index Schema",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "create-schema",
                "/"
              ],
              "query": [
                {
                  "key": "commit",
                  "value": null
                },
                {
                  "key": "echo",
                  "value": null
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"_schema\": {\r\n    \"schema\": {\r\n      \"name\": {\r\n        \"_type\": \"text\"\r\n      },\r\n      \"age\": {\r\n        \"_type\": \"positive\"\r\n      }\r\n    }\r\n  }\r\n}"
            }
          }
        },
        {
          "name": "Get Schema",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "create-schema",
                "/"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._schema.schema.name).to.include({'_type': 'text' });",
                  "    pm.expect(jsonData._schema.schema.age).to.include({'_type': 'positive' });",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Create Schema uuid Field",
      "item": [
        {
          "name": "Index Schema",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "create-schema-uuid-field",
                "doc"
              ],
              "query": [
                {
                  "key": "commit",
                  "value": null
                },
                {
                  "key": "echo",
                  "value": null
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\r\n\t\"_schema\": {\r\n\t\t\"schema\": {\r\n\t\t\t\"_id\": {\r\n\t\t\t\t\"_type\": \"keyword\",\r\n\t\t\t},\r\n\t\t\t\"<uuid_field>\": {\r\n\t\t\t\t\"meta\": {\r\n\t\t\t\t\t\"_recurse\": false,\r\n\t\t\t\t},\r\n\t\t\t\t\"roles\": {\r\n\t\t\t\t\t\"_type\": \"array\/keyword\",\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t}\r\n\t},\r\n\t\"~3pZyPcFqGq\": {\r\n\t\t\"meta\": {\r\n\t\t\t\"scope\": \"read write\"\r\n\t\t},\r\n\t\t\"roles\": [\r\n\t\t\t\"myself\"\r\n\t\t]\r\n\t},\r\n}"
            }
          }
        },
        {
          "name": "Get Schema",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "create-schema-uuid-field",
                "/"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._schema.schema).to.have.any.keys(['<uuid_field>']);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Single Array",
      "item": [
        {
          "name": "Index Single Array",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "array_single",
                "doc"
              ],
              "query": [
                {
                  "key": "commit",
                  "value": null
                },
                {
                  "key": "echo",
                  "value": null
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"types\": [ \"A\" ]\r\n}"
            }
          }
        },
        {
          "name": "Get Single Array",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "array_single",
                "._schema.schema.types"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._type).to.equal('array/text');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Info Single Array",
          "request": {
            "method": "INFO",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "array_single",
                "doc"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.terms.types).to.have.any.keys(['Sa']);",
                  "    pm.expect(jsonData.values).to.include({'1680431078': 'A'});",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Array",
      "item": [
        {
          "name": "Index Array",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "array",
                "doc"
              ],
              "query": [
                {
                  "key": "commit",
                  "value": null
                },
                {
                  "key": "echo",
                  "value": null
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"types\": [\r\n    \"A\", \"B\", \"C\", \"D\",\r\n    \"E\", \"F\", \"G\", \"H\"\r\n  ]\r\n}"
            }
          }
        },
        {
          "name": "Get Array",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "array",
                "._schema.schema.types"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._type).to.equal('array/text');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Info Array",
          "request": {
            "method": "INFO",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "array",
                "doc"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.terms.types).to.have.all.keys(['Sa','Sb','Sc','Sd','Se','Sf','Sg','Sh']);",
                  "    pm.expect(jsonData.values).to.include({'1680431078': '\u0000\u0001A\u0001B\u0001C\u0001D\u0001E\u0001F\u0001G\u0001H'});",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Array of Arrays",
      "item": [
        {
          "name": "Index Array of Arrays",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "array-of-array",
                "doc"
              ],
              "query": [
                {
                  "key": "commit",
                  "value": null
                },
                {
                  "key": "echo",
                  "value": null
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"types\": [\r\n    [ \"A\", \"B\", \"C\", \"D\" ],\r\n    [ \"E\", \"F\", \"G\", \"H\" ]\r\n  ]\r\n}"
            }
          }
        },
        {
          "name": "Get Array of Arrays",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "array-of-array",
                "/"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._schema.schema.types._type).to.equal('array/text');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Info Array of Arrays",
          "request": {
            "method": "INFO",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "array-of-array",
                "doc"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.terms.types).to.have.all.keys(['Sa','Sb','Sc','Sd','Se','Sf','Sg','Sh']);",
                  "    pm.expect(jsonData.values).to.include({'1680431078': '\u0000\u0001A\u0001B\u0001C\u0001D\u0001E\u0001F\u0001G\u0001H'});",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Array of Arrays of Arrays",
      "item": [
        {
          "name": "Index Array of Arrays of Arrays",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "array-of-arrays-of-arrays",
                "doc"
              ],
              "query": [
                {
                  "key": "commit",
                  "value": null
                },
                {
                  "key": "echo",
                  "value": null
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"types\": [\r\n    [ [ \"A\", \"B\" ], [ \"C\", \"D\" ] ],\r\n    [ [ \"E\", \"F\" ], [ \"G\", \"H\" ] ]\r\n  ]\r\n}"
            }
          }
        },
        {
          "name": "Get Array of Arrays of Arrays",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "array-of-arrays-of-arrays",
                "/"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._schema.schema.types._type).to.equal('array/text');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Info Array of Arrays of Arrays",
          "request": {
            "method": "INFO",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "array-of-arrays-of-arrays",
                "doc"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.terms.types).to.have.all.keys(['Sa','Sb','Sc','Sd','Se','Sf','Sg','Sh']);",
                  "    pm.expect(jsonData.values).to.include({'1680431078': '\u0000\u0001A\u0001B\u0001C\u0001D\u0001E\u0001F\u0001G\u0001H'});",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Arrays mixed with text",
      "item": [
        {
          "name": "Index Arrays",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "arrays",
                "doc"
              ],
              "query": [
                {
                  "key": "commit",
                  "value": null
                },
                {
                  "key": "echo",
                  "value": null
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"types\": [\r\n    \"A\", \"B\", [ \"C\", \"D\" ], [ \"E\", \"F\", [ \"G\", \"H\" ] ],\r\n    \"I\", [ \"J\", [ \"K\", [ \"L\", [ \"M\", \"N\" ]] ] ]\r\n  ]\r\n}"
            }
          }
        },
        {
          "name": "Get Arrays",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "arrays",
                "/"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._schema.schema.types._type).to.equal('array/text');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Info Arrays",
          "request": {
            "method": "INFO",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "arrays",
                "doc"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.terms.types).to.have.all.keys(['Sa','Sb','Sc','Sd','Se','Sf','Sg','Sh','Si','Sj','Sk','Sl','Sm','Sn']);",
                  "    pm.expect(jsonData.values).to.include({'1680431078': '\u0000\u0001A\u0001B\u0001C\u0001D\u0001E\u0001F\u0001G\u0001H\u0001I\u0001J\u0001K\u0001L\u0001M\u0001N'});",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Array of Objects",
      "item": [
        {
          "name": "Index Array of Objects",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "array_of_objects",
                "doc"
              ],
              "query": [
                {
                  "key": "commit",
                  "value": null
                },
                {
                  "key": "echo",
                  "value": null
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"types\": [\r\n    {\r\n      \"property\": \"A\",\r\n      \"number\": 1\r\n    },\r\n    {\r\n      \"property\": \"B\",\r\n      \"number\": 2\r\n    },\r\n    {\r\n      \"property\": \"C\",\r\n      \"number\": 3\r\n    },\r\n    {\r\n      \"property\": \"D\",\r\n      \"number\": 4\r\n    },\r\n    {\r\n      \"property\": \"E\",\r\n      \"number\": 5\r\n    },\r\n    {\r\n      \"property\": \"F\",\r\n      \"number\": 6\r\n    },\r\n    {\r\n      \"property\": \"G\",\r\n      \"number\": 7\r\n    },\r\n    {\r\n      \"property\": \"H\",\r\n      \"number\": 8\r\n    }\r\n  ]\r\n}"
            }
          }
        },
        {
          "name": "Get Array of Objects",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "array_of_objects",
                "/"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._schema.schema.types._type).to.equal('array/object');",
                  "    pm.expect(jsonData._schema.schema.types.property._type).to.equal('text');",
                  "    pm.expect(jsonData._schema.schema.types.number._type).to.equal('integer');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Info Array of Objects",
          "request": {
            "method": "INFO",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "host": [
                "{{domain}}"
              ],
              "path": [
                "test",
                "array_of_objects",
                "doc"
              ],
              "query": [
                {
                  "key": "volatile",
                  "value": null
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"response is success\", function() {",
                  "    pm.response.to.be.success;",
                  "});",
                  "pm.test(\"value is valid\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.terms.types.property).to.have.all.keys(['Sa','Sb','Sc','Sd','Se','Sf','Sg','Sh']);",
                  "    pm.expect(jsonData.values).to.be.an('object').that.have.all.keys(['0', '1', '1666287912','3452157842']);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "domain",
      "value": "localhost:8880",
      "type": "string"
    }
  ]
}